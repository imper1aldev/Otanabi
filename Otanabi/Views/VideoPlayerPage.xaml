<Page
    x:Class="Otanabi.Views.VideoPlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:converters="using:Otanabi.Converters"
    xmlns:converters1="using:CommunityToolkit.WinUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:CommunityToolkit.WinUI.Media"
    xmlns:models="using:Otanabi.Core.Models"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:usercontrols="using:Otanabi.UserControls"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:LongToDoubleConverter x:Key="LongToDoubleConverter" />
        <converters1:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters1:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters1:StringFormatConverter x:Key="StringFormatConverter" />
        <media:AttachedCardShadow x:Key="CommonShadow" Offset="4" />

    </Page.Resources>
    <usercontrols:MouseGrid x:Name="ContentArea" VerticalAlignment="Stretch">


        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>


        <Grid
            Width="0"
            Height="0"
            Visibility="Visible">
            <Button
                Width="0"
                Height="0"
                Command="{x:Bind ViewModel.PlayPauseCommand}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Space" />
                </Button.KeyboardAccelerators>
            </Button>
            <Button
                Width="0"
                Height="0"
                Command="{x:Bind ViewModel.FullScreenCommand}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Escape" />
                </Button.KeyboardAccelerators>
            </Button>
            <Button
                Width="0"
                Height="0"
                Command="{x:Bind ViewModel.RewindCommand}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Left" />
                </Button.KeyboardAccelerators>
            </Button>
            <Button
                Width="0"
                Height="0"
                Command="{x:Bind ViewModel.FastForwardCommand}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Right" />
                </Button.KeyboardAccelerators>
            </Button>
        </Grid>

        <Grid Width="auto" Canvas.ZIndex="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border
                x:Name="RewindIconBox"
                Grid.Column="0"
                Margin="15,0,15,0"
                Padding="10,8,16,8"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                ui:Effects.Shadow="{StaticResource CommonShadow}"
                Background="#c42b2c2c"
                CornerRadius="8"
                Visibility="{x:Bind ViewModel.RewindVisible, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation
                        From="0"
                        To="1.0"
                        Duration="0:0:0.4" />
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation
                        From="1.0"
                        To="0"
                        Duration="0:0:0.4" />
                </animations:Implicit.HideAnimations>
                <FontIcon FontSize="50" Glyph="&#xEB9E;" />
            </Border>
            <Border
                x:Name="FastIconBox"
                Grid.Column="1"
                Margin="15,0,15,0"
                Padding="16,8,10,8"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                ui:Effects.Shadow="{StaticResource CommonShadow}"
                Background="#c42b2c2c"
                CornerRadius="8"
                Visibility="{x:Bind ViewModel.FastVisible, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation
                        From="0"
                        To="1.0"
                        Duration="0:0:0.4" />
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation
                        From="1.0"
                        To="0"
                        Duration="0:0:0.4" />
                </animations:Implicit.HideAnimations>
                <FontIcon FontSize="50" Glyph="&#xEB9D;" />

            </Border>

        </Grid>


        <ProgressRing
            Width="80"
            Height="80"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Canvas.ZIndex="2"
            IsActive="True"
            Visibility="{x:Bind ViewModel.LoadingVideo, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

        <StackPanel
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Canvas.ZIndex="2"
            Visibility="{x:Bind ViewModel.IsErrorVideo, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <TextBlock
                Margin="0,0,0,15"
                FontSize="25"
                Text="Video not Available" />

            <!--<FontIcon Glyph="&#xEB90;" FontSize="40" Margin="0,0,0,15"/>-->

            <Button
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{x:Bind ViewModel.RetryLoadCommand}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,15,0"
                        FontSize="20"
                        Text="Retry" />
                    <FontIcon FontSize="20" Glyph="&#xE72C;" />
                </StackPanel>
            </Button>
        </StackPanel>



        <SplitView
            x:Name="splitView"
            Grid.Row="0"
            Grid.RowSpan="{x:Bind ViewModel.RowSpan, Mode=OneWay}"
            Width="Auto"
            Height="Auto"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            CompactPaneLength="48"
            DisplayMode="Overlay"
            IsPaneOpen="{x:Bind ViewModel.IsChapPanelOpen, Mode=OneWay}"
            OpenPaneLength="256"
            PaneBackground="Transparent"
            PanePlacement="Right">
            <SplitView.Pane>
                <Grid
                    Height="800"
                    Background="#272728"
                    CornerRadius="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Grid.Row="1"
                        Margin="0,10,0,10"
                        HorizontalAlignment="Center"
                        TextWrapping="Wrap">
                        <Run Text="Now Playing: " />
                        <Run Text="{x:Bind ViewModel.ChapterName, Mode=OneWay}" />
                    </TextBlock>
                    <Border
                        Grid.Row="2"
                        Margin="0,5,0,5"
                        BorderBrush="AliceBlue"
                        BorderThickness="1" />
                    <TextBlock
                        x:Name="PaneHeader"
                        Grid.Row="3"
                        Margin="0,10,0,0"
                        HorizontalAlignment="Center"
                        Style="{StaticResource BaseTextBlockStyle}"
                        Text="Chapter List" />

                    <ScrollView Grid.Row="4" Margin="0,12,0,0">

                        <ListView
                            x:Name="ChapPaneList"
                            VerticalAlignment="Stretch"
                            IsItemClickEnabled="True"
                            ItemsSource="{x:Bind ViewModel.ChapterList, Mode=OneWay}"
                            SelectedIndex="{x:Bind ViewModel.SelectedIndex, Mode=OneWay}"
                            SelectionMode="Single">
                            <interactivity:Interaction.Behaviors>
                                <interactions:EventTriggerBehavior EventName="ItemClick">
                                    <interactions:InvokeCommandAction Command="{x:Bind ViewModel.onClickChapCommand}" />
                                </interactions:EventTriggerBehavior>

                            </interactivity:Interaction.Behaviors>
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="models:Chapter">
                                    <StackPanel Padding="0,15,0,15">
                                        <!--<TextBlock Text="{Binding Path=Name}" />-->
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Text="{x:Bind ChapterNumber, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='Episode # {0}'}"
                                            TextWrapping="Wrap">
                                            <TextBlock.FontSize>15</TextBlock.FontSize>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </ScrollView>


                    <!--<StackPanel Orientation="Horizontal" Grid.Row="2" Margin="14,24,0,24" >
                        <SymbolIcon Symbol="Setting" />
                        <TextBlock Text="Settings" Margin="24,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>-->
                </Grid>
            </SplitView.Pane>
            <interactivity:Interaction.Behaviors>
                <interactions:EventTriggerBehavior EventName="PaneClosed">
                    <interactions:InvokeCommandAction Command="{x:Bind ViewModel.onClosePaneCommand}" />
                </interactions:EventTriggerBehavior>

            </interactivity:Interaction.Behaviors>

            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <MediaPlayerElement
                    x:Name="AMediaPlayer"
                    Grid.Row="0"
                    Grid.RowSpan="{x:Bind ViewModel.RowSpan, Mode=OneWay}"
                    Width="Auto"
                    Height="Auto"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AreTransportControlsEnabled="True"
                    PosterSource="ms-appx:///Assets/OtanabiHres.png">
                    <interactivity:Interaction.Behaviors>
                        <interactions:EventTriggerBehavior EventName="PointerPressed">
                            <interactions:InvokeCommandAction Command="{x:Bind ViewModel.ClickFullCommand}" />
                        </interactions:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <MediaPlayerElement.TransportControls>
                        <usercontrols:AnimeMediaTransportControls
                            FastPlayFallbackBehaviour="Skip"
                            FullScreenCommand="{x:Bind ViewModel.FullScreenCommand}"
                            IsCompact="True"
                            IsFullScreen="{x:Bind ViewModel.IsNotFullScreen, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                            IsNextEnabled="{x:Bind ViewModel.IsEnabledNext, Mode=OneWay}"
                            IsNextTrackButtonVisible="True"
                            IsPanelOpen="{x:Bind ViewModel.IsChapPanelOpen, Mode=OneWay}"
                            IsPlaybackRateButtonVisible="True"
                            IsPlaybackRateEnabled="True"
                            IsPrevEnabled="{x:Bind ViewModel.IsEnabledPrev, Mode=OneWay}"
                            IsPreviousTrackButtonVisible="True"
                            IsSeekBarVisible="True"
                            IsZoomButtonVisible="False"
                            IsZoomEnabled="True"
                            NextCommand="{x:Bind ViewModel.NextChapterCommand}"
                            OpenPanelCommand="{x:Bind ViewModel.ToggleChapPanelCommand}"
                            PreviusCommand="{x:Bind ViewModel.PrevChapterCommand}"
                            SkipIntroCommand="{x:Bind ViewModel.SkipIntroCommand}" />
                    </MediaPlayerElement.TransportControls>
                </MediaPlayerElement>
            </Grid>
        </SplitView>
    </usercontrols:MouseGrid>
</Page>
